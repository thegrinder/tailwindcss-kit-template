{"version":3,"sources":["webpack:///../src/components/input/input.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","useColorMode","IoMdLock","Input","Select","Textarea","className","placeholder","startIcon","endIcon","invalid","valid","disabled","isMDXComponent"],"mappings":"2jBAYO,IAAMA,EAAe,Q,gNAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,UAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,SADR,SAIA,iBAAQ,CACN,GAAM,WADR,SAGA,iBAAQ,CACN,GAAM,iBADR,iBAGA,uBAAK,sBAAMC,WAAW,OAAU,CAC5B,UAAa,iBADZ,4tCAqDL,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,uaAAkcC,SAAO,GAC1eL,QACAH,kBACAS,eACAC,iBACAC,aACAC,UACAC,WACAC,cAR0e,gBAS1ed,IAT0e,EAU1eH,eAV0e,GAWzeO,QAAQ,cACb,mBAAKW,UAAU,YACb,YAAC,IAAD,CAAOC,YAAY,UAAUD,UAAU,OAAOX,QAAQ,UACtD,YAAC,IAAD,CAAOa,UAAW,YAAC,IAAD,CAAUb,QAAQ,aAAeY,YAAY,aAAaD,UAAU,OAAOX,QAAQ,UACrG,YAAC,IAAD,CAAOc,QAAS,YAAC,IAAD,CAAUd,QAAQ,aAAeY,YAAY,WAAWD,UAAU,OAAOX,QAAQ,UACjG,YAAC,IAAD,CAAOY,YAAY,UAAUG,SAAO,EAACJ,UAAU,OAAOX,QAAQ,UAC9D,YAAC,IAAD,CAAOY,YAAY,QAAQI,OAAK,EAACL,UAAU,OAAOX,QAAQ,UAC1D,YAAC,IAAD,CAAOY,YAAY,WAAWK,UAAQ,EAACN,UAAU,OAAOX,QAAQ,YAGhE,iBAAQ,CACN,GAAM,UADR,UAGA,iBAAQ,CACN,GAAM,mBADR,iBAGA,uBAAK,sBAAMC,WAAW,OAAU,CAC5B,UAAa,iBADZ,knBA8BL,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,2VAAsWC,SAAO,GAC9YL,QACAH,kBACAS,eACAC,iBACAC,aACAC,UACAC,WACAC,cAR8Y,gBAS9Yd,IAT8Y,EAU9YH,eAV8Y,GAW7YO,QAAQ,cACb,mBAAKW,UAAU,YACb,YAAC,IAAD,CAAQA,UAAU,OAAOX,QAAQ,UAC/B,sCAEF,YAAC,IAAD,CAAQe,SAAO,EAACJ,UAAU,OAAOX,QAAQ,UACvC,sCAEF,YAAC,IAAD,CAAQgB,OAAK,EAACL,UAAU,OAAOX,QAAQ,UACrC,oCAEF,YAAC,IAAD,CAAQiB,UAAQ,EAACN,UAAU,OAAOX,QAAQ,UACxC,yCAIF,iBAAQ,CACN,GAAM,YADR,YAGA,iBAAQ,CACN,GAAM,mBADR,iBAGA,uBAAK,sBAAMC,WAAW,OAAU,CAC5B,UAAa,iBADZ,4nBA6BL,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,uRAA0SC,SAAO,GAClVL,QACAH,kBACAS,eACAC,iBACAC,aACAC,UACAC,WACAC,cARkV,gBASlVd,IATkV,EAUlVH,eAVkV,GAWjVO,QAAQ,cACb,mBAAKW,UAAU,YACb,YAAC,IAAD,CAAUC,YAAY,UAAUD,UAAU,OAAOX,QAAQ,aACzD,YAAC,IAAD,CAAUY,YAAY,UAAUG,SAAO,EAACJ,UAAU,OAAOX,QAAQ,aACjE,YAAC,IAAD,CAAUY,YAAY,QAAQI,OAAK,EAACL,UAAU,OAAOX,QAAQ,aAC7D,YAAC,IAAD,CAAUY,YAAY,WAAWK,UAAQ,EAACN,UAAU,OAAOX,QAAQ,qB,8MAOvEH,EAAWqB,gBAAiB","file":"component---src-components-input-input-mdx-aa2e34287b3c0bf9c604.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/travis/build/thegrinder/tailwindcss-kit-template/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground } from 'docz';\nimport { useColorMode } from 'theme-ui';\nimport { IoMdLock } from 'react-icons/io';\nimport Input from './ReactInput';\nimport Select from './ReactSelect';\nimport Textarea from './ReactTextarea';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"input\"\n    }}>{`Input`}</h1>\n\n    <h2 {...{\n      \"id\": \"input-1\"\n    }}>{`Input`}</h2>\n    <h3 {...{\n      \"id\": \"react-snippet\"\n    }}>{`React snippet`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import React from 'react';\nimport classNames from 'classnames';\nimport { useColorMode } from 'theme-ui';\n\nconst Input = ({\n  valid = false,\n  invalid = false,\n  disabled = false,\n  startIcon,\n  endIcon,\n  className,\n  placeholder,\n}) => {\n  const [colorMode] = useColorMode();\n  return (\n    <div className={classNames('relative', className)}>\n      {(startIcon || endIcon) && (\n        <span\n          className={classNames(\n            'absolute',\n            'inset-y-0',\n            'flex',\n            'items-center',\n            'justify-center',\n            'w-10',\n            \\`\\${colorMode}:text-neutral-600\\`,\n            {\n              'left-0': !!startIcon,\n              'right-0': !!endIcon,\n            }\n          )}\n        >\n          {startIcon || endIcon}\n        </span>\n      )}\n      <input\n        disabled={disabled}\n        className={classNames({\n          input: true,\n          'pl-8': !!startIcon,\n          'pr-8': !!endIcon,\n          [\\`\\${colorMode}:input-normal\\`]: !valid && !invalid,\n          [\\`\\${colorMode}:input-valid\\`]: valid,\n          [\\`\\${colorMode}:input-invalid\\`]: invalid,\n        })}\n        placeholder={placeholder}\n      />\n    </div>\n  );\n};\n`}</code></pre>\n    <Playground __position={0} __code={'<div className=\\\"max-w-sm\\\">\\n  <Input placeholder=\\\"Regular\\\" className=\\\"mb-4\\\" />\\n  <Input startIcon={<IoMdLock />} placeholder=\\\"Start icon\\\" className=\\\"mb-4\\\" />\\n  <Input endIcon={<IoMdLock />} placeholder=\\\"End icon\\\" className=\\\"mb-4\\\" />\\n  <Input placeholder=\\\"Invalid\\\" invalid className=\\\"mb-4\\\" />\\n  <Input placeholder=\\\"Valid\\\" valid className=\\\"mb-4\\\" />\\n  <Input placeholder=\\\"Disabled\\\" disabled className=\\\"mb-4\\\" />\\n</div>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      useColorMode,\n      IoMdLock,\n      Input,\n      Select,\n      Textarea,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <div className=\"max-w-sm\">\n    <Input placeholder=\"Regular\" className=\"mb-4\" mdxType=\"Input\" />\n    <Input startIcon={<IoMdLock mdxType=\"IoMdLock\" />} placeholder=\"Start icon\" className=\"mb-4\" mdxType=\"Input\" />\n    <Input endIcon={<IoMdLock mdxType=\"IoMdLock\" />} placeholder=\"End icon\" className=\"mb-4\" mdxType=\"Input\" />\n    <Input placeholder=\"Invalid\" invalid className=\"mb-4\" mdxType=\"Input\" />\n    <Input placeholder=\"Valid\" valid className=\"mb-4\" mdxType=\"Input\" />\n    <Input placeholder=\"Disabled\" disabled className=\"mb-4\" mdxType=\"Input\" />\n  </div>\n    </Playground>\n    <h2 {...{\n      \"id\": \"select\"\n    }}>{`Select`}</h2>\n    <h3 {...{\n      \"id\": \"react-snippet-1\"\n    }}>{`React snippet`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import React from 'react';\nimport classNames from 'classnames';\nimport { useColorMode } from 'theme-ui';\n\nconst Select = ({\n  valid = false,\n  invalid = false,\n  disabled = false,\n  className,\n  children,\n}) => {\n  const [colorMode] = useColorMode();\n  return (\n    <select\n      disabled={disabled}\n      className={classNames({\n        select: true,\n        [className]: !!className,\n        [\\`\\${colorMode}:input-normal\\`]: !valid && !invalid,\n        [\\`\\${colorMode}:input-valid\\`]: valid,\n        [\\`\\${colorMode}:input-invalid\\`]: invalid,\n      })}\n    >\n      {children}\n    </select>\n  );\n};\n`}</code></pre>\n    <Playground __position={1} __code={'<div className=\\\"max-w-sm\\\">\\n  <Select className=\\\"mb-4\\\">\\n    <option>Regular</option>\\n  </Select>\\n  <Select invalid className=\\\"mb-4\\\">\\n    <option>Invalid</option>\\n  </Select>\\n  <Select valid className=\\\"mb-4\\\">\\n    <option>Valid</option>\\n  </Select>\\n  <Select disabled className=\\\"mb-4\\\">\\n    <option>Disabled</option>\\n  </Select>\\n</div>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      useColorMode,\n      IoMdLock,\n      Input,\n      Select,\n      Textarea,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <div className=\"max-w-sm\">\n    <Select className=\"mb-4\" mdxType=\"Select\">\n      <option>Regular</option>\n    </Select>\n    <Select invalid className=\"mb-4\" mdxType=\"Select\">\n      <option>Invalid</option>\n    </Select>\n    <Select valid className=\"mb-4\" mdxType=\"Select\">\n      <option>Valid</option>\n    </Select>\n    <Select disabled className=\"mb-4\" mdxType=\"Select\">\n      <option>Disabled</option>\n    </Select>\n  </div>\n    </Playground>\n    <h2 {...{\n      \"id\": \"textarea\"\n    }}>{`Textarea`}</h2>\n    <h3 {...{\n      \"id\": \"react-snippet-2\"\n    }}>{`React snippet`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import React from 'react';\nimport classNames from 'classnames';\nimport { useColorMode } from 'theme-ui';\n\nconst Textarea = ({\n  valid = false,\n  invalid = false,\n  disabled = false,\n  className,\n  placeholder,\n}) => {\n  const [colorMode] = useColorMode();\n  return (\n    <textarea\n      disabled={disabled}\n      className={classNames({\n        textarea: true,\n        [className]: !!className,\n        [\\`\\${colorMode}:input-normal\\`]: !valid && !invalid,\n        [\\`\\${colorMode}:input-valid\\`]: valid,\n        [\\`\\${colorMode}:input-invalid\\`]: invalid,\n      })}\n      placeholder={placeholder}\n    />\n  );\n};\n`}</code></pre>\n    <Playground __position={2} __code={'<div className=\\\"max-w-sm\\\">\\n  <Textarea placeholder=\\\"Regular\\\" className=\\\"mb-4\\\" />\\n  <Textarea placeholder=\\\"Invalid\\\" invalid className=\\\"mb-4\\\" />\\n  <Textarea placeholder=\\\"Valid\\\" valid className=\\\"mb-4\\\" />\\n  <Textarea placeholder=\\\"Disabled\\\" disabled className=\\\"mb-4\\\" />\\n</div>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      useColorMode,\n      IoMdLock,\n      Input,\n      Select,\n      Textarea,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <div className=\"max-w-sm\">\n    <Textarea placeholder=\"Regular\" className=\"mb-4\" mdxType=\"Textarea\" />\n    <Textarea placeholder=\"Invalid\" invalid className=\"mb-4\" mdxType=\"Textarea\" />\n    <Textarea placeholder=\"Valid\" valid className=\"mb-4\" mdxType=\"Textarea\" />\n    <Textarea placeholder=\"Disabled\" disabled className=\"mb-4\" mdxType=\"Textarea\" />\n  </div>\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}