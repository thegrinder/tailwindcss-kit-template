{"version":3,"sources":["webpack:///../src/components/icon/icon.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","MdHome","MdDone","MdWarning","MdClear","MdError","MdCode","Icon","variant","className","isMDXComponent"],"mappings":"uhBASO,IAAMA,EAAe,Q,8MAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,MAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,QADR,QAIA,iBAAQ,CACN,GAAM,iBADR,iBAGA,uBAAK,sBAAMC,WAAW,OAAU,CAC5B,UAAa,iBADZ,oXAiBL,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,8UAAmWC,SAAO,GAC3YL,QACAH,kBACAS,eACAC,WACAC,WACAC,cACAC,YACAC,YACAC,WACAC,UAV2Y,gBAW3YhB,IAX2Y,EAY3YH,eAZ2Y,GAa1YO,QAAQ,cACb,YAAC,IAAD,CAAMa,QAAQ,UAAUC,UAAU,OAAOd,QAAQ,QAC/C,YAAC,IAAD,CAAQA,QAAQ,YAElB,YAAC,IAAD,CAAMa,QAAQ,UAAUC,UAAU,OAAOd,QAAQ,QAC/C,YAAC,IAAD,CAAQA,QAAQ,YAElB,YAAC,IAAD,CAAMa,QAAQ,SAASC,UAAU,OAAOd,QAAQ,QAC9C,YAAC,IAAD,CAASA,QAAQ,aAEnB,YAAC,IAAD,CAAMa,QAAQ,UAAUC,UAAU,OAAOd,QAAQ,QAC/C,YAAC,IAAD,CAAWA,QAAQ,eAErB,YAAC,IAAD,CAAMa,QAAQ,UAAUC,UAAU,OAAOd,QAAQ,QAC/C,YAAC,IAAD,CAAQA,QAAQ,mB,4MAOpBH,EAAWkB,gBAAiB","file":"component---src-components-icon-icon-mdx-29a90d7b3326c593ac23.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/travis/build/thegrinder/tailwindcss-kit-template/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground } from 'docz';\nimport { MdHome, MdDone, MdWarning, MdClear, MdError, MdCode } from 'react-icons/md';\nimport Icon from './ReactIcon';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"icon\"\n    }}>{`Icon`}</h1>\n\n    <h2 {...{\n      \"id\": \"react-snippet\"\n    }}>{`React snippet`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import React from 'react';\nimport classNames from 'classnames';\nimport { useColorMode } from 'theme-ui';\n\nconst Icon = ({ variant = 'primary', className, children }) => {\n  const [colorMode] = useColorMode();\n  return (\n    <span\n      className={classNames('icon', \\`\\${colorMode}:icon-\\${variant}\\`, className)}\n    >\n      {children}\n    </span>\n  );\n};\n`}</code></pre>\n    <Playground __position={0} __code={'<Icon variant=\\\"neutral\\\" className=\\\"mr-4\\\">\\n  <MdCode />\\n</Icon>\\n<Icon variant=\\\"primary\\\" className=\\\"mr-4\\\">\\n  <MdHome />\\n</Icon>\\n<Icon variant=\\\"danger\\\" className=\\\"mr-4\\\">\\n  <MdError />\\n</Icon>\\n<Icon variant=\\\"warning\\\" className=\\\"mr-4\\\">\\n  <MdWarning />\\n</Icon>\\n<Icon variant=\\\"success\\\" className=\\\"mb-4\\\">\\n  <MdDone />\\n</Icon>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      MdHome,\n      MdDone,\n      MdWarning,\n      MdClear,\n      MdError,\n      MdCode,\n      Icon,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Icon variant=\"neutral\" className=\"mr-4\" mdxType=\"Icon\">\n    <MdCode mdxType=\"MdCode\" />\n  </Icon>\n  <Icon variant=\"primary\" className=\"mr-4\" mdxType=\"Icon\">\n    <MdHome mdxType=\"MdHome\" />\n  </Icon>\n  <Icon variant=\"danger\" className=\"mr-4\" mdxType=\"Icon\">\n    <MdError mdxType=\"MdError\" />\n  </Icon>\n  <Icon variant=\"warning\" className=\"mr-4\" mdxType=\"Icon\">\n    <MdWarning mdxType=\"MdWarning\" />\n  </Icon>\n  <Icon variant=\"success\" className=\"mb-4\" mdxType=\"Icon\">\n    <MdDone mdxType=\"MdDone\" />\n  </Icon>\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}