{"version":3,"sources":["webpack:///../src/components/link/link.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","useColorMode","Link","className","variant","href","colorMode","isMDXComponent"],"mappings":"yhBASO,IAAMA,EAAe,Q,8MAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,QAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,QADR,QAIA,iBAAQ,CACN,GAAM,iBADR,iBAGA,uBAAK,sBAAMC,WAAW,OAAU,CAC5B,UAAa,iBADZ,obAsBL,iBAAQ,CACN,GAAM,YADR,YAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,uLAAoMC,SAAO,GAC5OL,QACAH,kBACAS,eACAC,iBACAC,UAL4O,gBAM5OX,IAN4O,EAO5OH,eAP4O,GAQ3OO,QAAQ,cACb,mBAAKQ,UAAU,QACb,YAAC,IAAD,CAAMC,QAAQ,UAAUC,KAAK,IAAIV,QAAQ,QAAzC,YAIF,mBAAKQ,UAAU,QACb,YAAC,IAAD,CAAMC,QAAQ,QAAQC,KAAK,IAAIV,QAAQ,QAAvC,WAKA,iBAAQ,CACN,GAAM,eADR,eAGA,YAAC,IAAD,CAAYE,WAAY,EAAGC,OAAQ,mYAAwYC,SAAO,GAChbL,QACAH,kBACAS,eACAC,iBACAC,UALgb,gBAMhbX,IANgb,EAOhbH,eAPgb,GAQ/aO,QAAQ,eACZ,WAAM,IACMW,EAAaL,cADnB,GAED,OAAO,4BACP,mBAAKE,UAAU,QACb,sBAAQA,UAAS,QAAUG,EAAV,yBAAjB,YAIF,mBAAKH,UAAU,QACb,sBAAQA,UAAS,QAAUG,EAAV,uBAAjB,oB,4MAWVd,EAAWe,gBAAiB","file":"component---src-components-link-link-mdx-d60a1cae8dbb2d42a0c8.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/travis/build/thegrinder/tailwindcss-kit-template/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground } from 'docz';\nimport { useColorMode } from 'theme-ui';\nimport Link from './ReactLink';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"link\"\n    }}>{`Link`}</h1>\n\n    <h2 {...{\n      \"id\": \"react-snippet\"\n    }}>{`React snippet`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import React from 'react';\nimport classNames from 'classnames';\nimport { useColorMode } from 'theme-ui';\n\nconst Link = ({ variant = 'primary', className, children, ...rest }) => {\n  const [colorMode] = useColorMode();\n  return (\n    <a\n      className={classNames(\n        'link',\n        \\`\\${colorMode}:link-variant-\\${variant}\\`,\n        className\n      )}\n      {...rest}\n    >\n      {children}\n    </a>\n  );\n};\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"variants\"\n    }}>{`Variants`}</h2>\n    <Playground __position={0} __code={'<div className=\\\"mb-4\\\">\\n  <Link variant=\\\"primary\\\" href=\\\"#\\\">\\n    primary\\n  </Link>\\n</div>\\n<div className=\\\"mb-4\\\">\\n  <Link variant=\\\"muted\\\" href=\\\"#\\\">\\n    muted\\n  </Link>\\n</div>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      useColorMode,\n      Link,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <div className=\"mb-4\">\n    <Link variant=\"primary\" href=\"#\" mdxType=\"Link\">\n      primary\n    </Link>\n  </div>\n  <div className=\"mb-4\">\n    <Link variant=\"muted\" href=\"#\" mdxType=\"Link\">\n      muted\n    </Link>\n  </div>\n    </Playground>\n    <h2 {...{\n      \"id\": \"button-link\"\n    }}>{`Button link`}</h2>\n    <Playground __position={1} __code={'() => {\\n  const [colorMode] = useColorMode()\\n  return (\\n    <>\\n      <div className=\\\"mb-4\\\">\\n        <button className={`link ${colorMode}:link-variant-primary`}>\\n          primary\\n        </button>\\n      </div>\\n      <div className=\\\"mb-4\\\">\\n        <button className={`link ${colorMode}:link-variant-muted`}>\\n          muted\\n        </button>\\n      </div>\\n    </>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      useColorMode,\n      Link,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [colorMode] = useColorMode();\n        return <>\n        <div className=\"mb-4\">\n          <button className={`link ${colorMode}:link-variant-primary`}>\n            primary\n          </button>\n        </div>\n        <div className=\"mb-4\">\n          <button className={`link ${colorMode}:link-variant-muted`}>\n            muted\n          </button>\n        </div>\n      </>;\n      }}\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}