{"version":3,"sources":["webpack:///../src/components/spinner/spinner.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","useColorMode","Spinner","className","size","colorMode","isMDXComponent"],"mappings":"yhBASO,IAAMA,EAAe,Q,oNAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,QAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,WADR,WAIA,iBAAQ,CACN,GAAM,iBADR,iBAGA,uBAAK,sBAAMC,WAAW,OAAU,CAC5B,UAAa,iBADZ,8MASL,iBAAQ,CACN,GAAM,SADR,SAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,0IAAqJC,SAAO,GAC7LL,QACAH,kBACAS,eACAC,iBACAC,aAL6L,gBAM7LX,IAN6L,EAO7LH,eAP6L,GAQ5LO,QAAQ,cACb,mBAAKQ,UAAU,QACb,YAAC,IAAD,CAASC,KAAK,KAAKT,QAAQ,aAE7B,mBAAKQ,UAAU,QACb,YAAC,IAAD,CAASC,KAAK,KAAKT,QAAQ,aAE7B,YAAC,IAAD,CAASS,KAAK,KAAKT,QAAQ,aAEzB,iBAAQ,CACN,GAAM,UADR,UAGA,2GACA,YAAC,IAAD,CAAYE,WAAY,EAAGC,OAAQ,kdAAudC,SAAO,GAC/fL,QACAH,kBACAS,eACAC,iBACAC,aAL+f,gBAM/fX,IAN+f,EAO/fH,eAP+f,GAQ9fO,QAAQ,eACZ,WAAM,IACMU,EAAaJ,cADnB,GAED,OAAO,4BACP,mBAAKE,UAAU,QACb,oBAAMA,UAAcE,EAAL,qBACb,YAAC,IAAD,CAASV,QAAQ,cAGrB,mBAAKQ,UAAU,QACb,oBAAMA,UAAcE,EAAL,qBACb,YAAC,IAAD,CAASV,QAAQ,cAGrB,oBAAMQ,UAAcE,EAAL,oBACb,YAAC,IAAD,CAASV,QAAQ,uB,kNAS3BH,EAAWc,gBAAiB","file":"component---src-components-spinner-spinner-mdx-e06e8674c55f6aae26c7.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/travis/build/thegrinder/tailwindcss-kit-template/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground } from 'docz';\nimport { useColorMode } from 'theme-ui';\nimport Spinner from './ReactSpinner';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"spinner\"\n    }}>{`Spinner`}</h1>\n\n    <h2 {...{\n      \"id\": \"react-snippet\"\n    }}>{`React snippet`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import React from 'react';\nimport classNames from 'classnames';\n\nconst Spinner = ({ size = 'md', ...rest }) => (\n  <span className={classNames('spinner', \\`spinner-size-\\${size}\\`)} {...rest} />\n);\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"sizes\"\n    }}>{`Sizes`}</h2>\n    <Playground __position={0} __code={'<div className=\\\"mb-4\\\">\\n  <Spinner size=\\\"sm\\\" />\\n</div>\\n<div className=\\\"mb-4\\\">\\n  <Spinner size=\\\"md\\\" />\\n</div>\\n<Spinner size=\\\"lg\\\" />'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      useColorMode,\n      Spinner,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <div className=\"mb-4\">\n    <Spinner size=\"sm\" mdxType=\"Spinner\" />\n  </div>\n  <div className=\"mb-4\">\n    <Spinner size=\"md\" mdxType=\"Spinner\" />\n  </div>\n  <Spinner size=\"lg\" mdxType=\"Spinner\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"colors\"\n    }}>{`Colors`}</h2>\n    <p>{`There are no predefined colors. However, spinner inherits the color of its parent.`}</p>\n    <Playground __position={1} __code={'() => {\\n  const [colorMode] = useColorMode()\\n  return (\\n    <>\\n      <div className=\\\"mb-4\\\">\\n        <span className={`${colorMode}:text-primary-500`}>\\n          <Spinner />\\n        </span>\\n      </div>\\n      <div className=\\\"mb-4\\\">\\n        <span className={`${colorMode}:text-success-500`}>\\n          <Spinner />\\n        </span>\\n      </div>\\n      <span className={`${colorMode}:text-danger-500`}>\\n        <Spinner />\\n      </span>\\n    </>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      useColorMode,\n      Spinner,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [colorMode] = useColorMode();\n        return <>\n        <div className=\"mb-4\">\n          <span className={`${colorMode}:text-primary-500`}>\n            <Spinner mdxType=\"Spinner\" />\n          </span>\n        </div>\n        <div className=\"mb-4\">\n          <span className={`${colorMode}:text-success-500`}>\n            <Spinner mdxType=\"Spinner\" />\n          </span>\n        </div>\n        <span className={`${colorMode}:text-danger-500`}>\n          <Spinner mdxType=\"Spinner\" />\n        </span>\n      </>;\n      }}\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}