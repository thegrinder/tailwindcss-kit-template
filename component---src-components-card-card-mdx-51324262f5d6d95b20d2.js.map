{"version":3,"sources":["webpack:///../src/components/card/card.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","useColorMode","Card","Button","colorMode","className","elevation","emphasis","isMDXComponent"],"mappings":"miBAUO,IAAMA,EAAe,Q,8MAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,MAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,QADR,QAIA,iBAAQ,CACN,GAAM,iBADR,iBAGA,uBAAK,sBAAMC,WAAW,OAAU,CAC5B,UAAa,iBADZ,sbAsBL,iBAAQ,CACN,GAAM,aADR,aAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,8zBAAu1BC,SAAO,GAC/3BL,QACAH,kBACAS,eACAC,iBACAC,SACAC,YAN+3B,gBAO/3BZ,IAP+3B,EAQ/3BH,eAR+3B,GAS93BO,QAAQ,eACZ,WAAM,IACMS,EAAaH,cADnB,GAED,OAAO,mBAAKI,UAAcD,EAAL,qBACrB,YAAC,IAAD,CAAME,UAAW,EAAGD,UAAU,WAAWV,QAAQ,QAC/C,mBAAKU,UAAU,cACb,mBAAKA,UAAU,iBACb,YAAC,IAAD,CAAQE,SAAS,SAASZ,QAAQ,UAAlC,YAEF,mBAAKU,UAAU,iBACb,YAAC,IAAD,CAAQE,SAAS,OAAOZ,QAAQ,UAAhC,cAIN,YAAC,IAAD,CAAMW,UAAW,EAAGD,UAAU,MAAMV,QAAQ,QAC1C,mBAAKU,UAAU,cACb,mBAAKA,UAAU,iBACb,YAAC,IAAD,CAAQE,SAAS,SAASZ,QAAQ,UAAlC,YAEF,mBAAKU,UAAU,iBACb,YAAC,IAAD,CAAQE,SAAS,OAAOZ,QAAQ,UAAhC,wB,4MAWdH,EAAWgB,gBAAiB","file":"component---src-components-card-card-mdx-51324262f5d6d95b20d2.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/travis/build/thegrinder/tailwindcss-kit-template/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground } from 'docz';\nimport { useColorMode } from 'theme-ui';\nimport Card from './ReactCard';\nimport Button from '../button/ReactButton';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"card\"\n    }}>{`Card`}</h1>\n\n    <h2 {...{\n      \"id\": \"react-snippet\"\n    }}>{`React snippet`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import React from 'react';\nimport classNames from 'classnames';\nimport { useColorMode } from 'theme-ui';\n\nconst Card = ({ elevation = 1, className, children, ...rest }) => {\n  const [colorMode] = useColorMode();\n  return (\n    <div\n      className={classNames(\n        'card',\n        \\`\\${colorMode}:card-elevation-\\${elevation}\\`,\n        className\n      )}\n      {...rest}\n    >\n      {children}\n    </div>\n  );\n};\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"elevation\"\n    }}>{`Elevation`}</h2>\n    <Playground __position={0} __code={'() => {\\n  const [colorMode] = useColorMode()\\n  return (\\n    <div className={`${colorMode}:bg-neutral-0 p-8`}>\\n      <Card elevation={1} className=\\\"p-8 mb-8\\\">\\n        <div className=\\\"flex -mx-2\\\">\\n          <div className=\\\"col-auto px-2\\\">\\n            <Button emphasis=\\\"medium\\\">primary</Button>\\n          </div>\\n          <div className=\\\"col-auto px-2\\\">\\n            <Button emphasis=\\\"high\\\">primary</Button>\\n          </div>\\n        </div>\\n      </Card>\\n      <Card elevation={2} className=\\\"p-8\\\">\\n        <div className=\\\"flex -mx-2\\\">\\n          <div className=\\\"col-auto px-2\\\">\\n            <Button emphasis=\\\"medium\\\">primary</Button>\\n          </div>\\n          <div className=\\\"col-auto px-2\\\">\\n            <Button emphasis=\\\"high\\\">primary</Button>\\n          </div>\\n        </div>\\n      </Card>\\n    </div>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      useColorMode,\n      Card,\n      Button,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [colorMode] = useColorMode();\n        return <div className={`${colorMode}:bg-neutral-0 p-8`}>\n        <Card elevation={1} className=\"p-8 mb-8\" mdxType=\"Card\">\n          <div className=\"flex -mx-2\">\n            <div className=\"col-auto px-2\">\n              <Button emphasis=\"medium\" mdxType=\"Button\">primary</Button>\n            </div>\n            <div className=\"col-auto px-2\">\n              <Button emphasis=\"high\" mdxType=\"Button\">primary</Button>\n            </div>\n          </div>\n        </Card>\n        <Card elevation={2} className=\"p-8\" mdxType=\"Card\">\n          <div className=\"flex -mx-2\">\n            <div className=\"col-auto px-2\">\n              <Button emphasis=\"medium\" mdxType=\"Button\">primary</Button>\n            </div>\n            <div className=\"col-auto px-2\">\n              <Button emphasis=\"high\" mdxType=\"Button\">primary</Button>\n            </div>\n          </div>\n        </Card>\n      </div>;\n      }}\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}